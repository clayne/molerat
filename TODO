Move polling to a separate thread
- Use signal/ppoll to wake it
- Will do lots of wakeup.   Fine for now.

Move run queues to spearate threads
- If in tasklet_run the current thread has a run queue, use it
- Plus a fallback run queue
- application_run and application_stop

Make polling thread a runqueue thread, so it doesn't get woken from
poll so much.  Check that wakeups get reduced accordingly.


new socket read/write interfaces (return code indicates blocked,
progress (>0), error, closed)

thorough testing of http reader (byte-by-byte parsing, large bodies,
prebody-body-prebody handling)

combined tasklet_init_run (won't need lock)

EPIPE/SIGPIPE handling.  At least make it an error.

Fix the spurious accept issue in socket.c

ERROR_INVALID to replace many asserts

When a client_socket is connected, its ops can be set to the
simple_socket ops.

tasklet: current_stopped and current_requeue should be combined into a
single state flag.

Refine thread.c lock held checking (use thread id)

Make test programs timeout